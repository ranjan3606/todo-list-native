// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TagItem renders correctly (snapshot) 1`] = `
<View
  style={
    [
      {
        "borderRadius": 8,
        "marginBottom": 10,
        "padding": 12,
      },
      {
        "backgroundColor": "#fff",
      },
    ]
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "borderRadius": 8,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "overflow": "hidden",
          "position": "relative",
        },
        false,
      ]
    }
  >
    <View
      style={
        {
          "flex": 1,
          "padding": 5,
        }
      }
    >
      <Text
        style={
          [
            {
              "fontSize": 16,
              "fontWeight": "600",
              "marginBottom": 4,
            },
            {
              "color": "#000",
            },
          ]
        }
      >
        work
      </Text>
      <Text
        style={
          [
            {
              "fontSize": 14,
            },
            {
              "color": "#888",
            },
          ]
        }
      >
        job, office
      </Text>
    </View>
    <View
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 5,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": [
            {
              "translateX": 100,
            },
          ],
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "marginLeft": 8,
            "opacity": 1,
            "padding": 8,
          }
        }
        testID="edit-tag-button"
      >
        <View
          color="#007bff"
          name="pencil"
          size={18}
          testID="icon-pencil"
        />
      </View>
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "marginLeft": 8,
            "opacity": 1,
            "padding": 8,
          }
        }
        testID="delete-tag-button"
      >
        <View
          color="red"
          name="trash"
          size={18}
          testID="icon-trash"
        />
      </View>
    </View>
  </View>
</View>
`;
